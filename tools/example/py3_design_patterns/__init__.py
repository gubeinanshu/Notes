"""
工厂模式： 解决对象创建问题
抽象工厂模式： 解决复杂对象创建问题
构造模式： 控制复杂对象的构造
原型模式： 解决对象拷贝问题
适配器模式： 解决接口不兼容问题
装饰器模式： 无需子类化实现扩展对象功能问题
外观模式： 简化复杂对象的访问问题
享元模式： 实现对象复用从而改善资源使用
mvc模式： 解耦展示逻辑和业务逻辑
代理模式： 通过一层间接保护层实现更安全的接口访问
责任链模式： 创建链式对象用来接收广播消息
命令模式： 用来给应用添加Undo操作
解释器模式： 用来实现Domain Specific Language(DSL)
发布订阅模式： 用来处理多个对象之间的发布订阅问题
状态模式： 实现有限状态机
策略模式： 动态选择算法策略
模板模式： 抽象出算法公共部分从而实现代码复用
单例模式： 使得一个类最多生成一个实例
"""